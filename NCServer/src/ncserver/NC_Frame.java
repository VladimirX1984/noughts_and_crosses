/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ncserver;

import ncserver.game.GameMessage;
import ncserver.game.GameMessageId;
import ncserver.utils.IListener;
import ncserver.utils.MessageBox;

/**
 *
 * @author Vladimir
 */
public class NC_Frame extends javax.swing.JFrame implements IListener {

    // <editor-fold defaultstate="collapsed" desc="Реализация интерфейса IListener">
    @Override
    public final void onEvent(int event, Object data) {
        switch (event) {
            case GameMessageId.SERVER_STOPPED: {
                jTextFiledPort.setEnabled(true);
                jButtonStartServer.setVisible(true);
                jButtonStopServer.setVisible(false);
                jComboBoxProtocol.setEnabled(true);
                jLabelState.setText("Сервер не запущен");
            }
            break;
            case GameMessageId.SERVER_STARTED: {
                jTextFiledPort.setEnabled(false);
                jButtonStartServer.setVisible(false);
                jButtonStopServer.setVisible(true);
                jComboBoxProtocol.setEnabled(false);
                jLabelState.setText("Сервер '" + ncAppServer.getProtocol() + "' запущен");
            }
            break;
            case GameMessageId.CLIENT_CONNECTED: {
                // присоединение клиента
                GameMessage msg = (GameMessage)data;
                NC_GameSession gameSession = (NC_GameSession)msg.getData();
                switch (msg.getId()) {
                    case 0: {
                        textAreaInfo.
                            append("\r\nКлиент '" + gameSession.getUserNameX() + "' (токен '"
                                + gameSession.getGameToken() + "') создал игру\r\n");
                    }
                    break;
                    case 1: {
                        textAreaInfo.
                            append("Клиент '" + gameSession.getUserName0() + "' присоединился к игре клиента '"
                                + gameSession.getUserNameX() + "'\r\n");
                    }
                    break;
                    case 2: {
                        textAreaInfo.
                            append("Клиент '" + msg.getMsg() + "' присоединился к игре клиента '"
                                + gameSession.getUserNameX() + "'\r\n");
                    }
                    break;
                }
            }
            break;
            case GameMessageId.CLIENT_DISCONNECTED: {
                // отсоединение клиента
                if (((String)data).length() > 0) {
                    textAreaInfo.append("Клиент '" + data + "' покинул игру\r\n");
                }
            }
            break;
            case GameMessageId.WIN_CLIENT: {
                // победил
                textAreaInfo.append("Клиент '" + data + "' победил\r\n");
            }
            break;
            case GameMessageId.GAME_SESSION_ENDED: {
                // игра закончена
                GameMessage msg = (GameMessage)data;
                NC_GameSession gameSession = (NC_GameSession)msg.getData();
                textAreaInfo.
                    append("Игра клиента '" + gameSession.getUserNameX() + "' (токен '" + gameSession.
                        getGameToken() + "') закончена.\r\n");
                long time = gameSession.getDuration() / 1000;
                int min = (int)time / 60;
                int sec = (int)time % 60;
                String sTime;
                if (sec < 10) {
                    sTime = String.format("%d:0%d", min, sec);
                }
                else {
                    sTime = String.format("%d:%d", min, sec);
                }
                textAreaInfo.
                    append("Длительность игры составила: " + sTime + ". Все клиенты отсоединились\r\n\r\n");
            }
            break;
        }
    }
    // </editor-fold>

    public NC_Frame(NC_AppServer ancAppServer) {
        initComponents();
        ncAppServer = ancAppServer;
        jButtonStopServer.setVisible(false);
        textAreaInfo.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ncPanel = new javax.swing.JPanel();
        labelPort = new javax.swing.JLabel();
        jButtonStartServer = new javax.swing.JButton();
        jLabelState = new javax.swing.JLabel();
        jTextFiledPort = new javax.swing.JTextField();
        jButtonStopServer = new javax.swing.JButton();
        textAreaInfo = new java.awt.TextArea();
        jComboBoxProtocol = new javax.swing.JComboBox<>();
        gamePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelPort.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelPort.setText("Порт:");

        jButtonStartServer.setText("Запустить сервер");
        jButtonStartServer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonStartServerMouseClicked(evt);
            }
        });

        jLabelState.setText("Сервер не запущен");
        jLabelState.setToolTipText("");

        jTextFiledPort.setText("8080");
        jTextFiledPort.setName("textPort"); // NOI18N

        jButtonStopServer.setText("Остановить сервер");
        jButtonStopServer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonStopServerMouseClicked(evt);
            }
        });

        jComboBoxProtocol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TCP", "HTTP" }));
        jComboBoxProtocol.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxProtocolItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout ncPanelLayout = new javax.swing.GroupLayout(ncPanel);
        ncPanel.setLayout(ncPanelLayout);
        ncPanelLayout.setHorizontalGroup(
            ncPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ncPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ncPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ncPanelLayout.createSequentialGroup()
                        .addGroup(ncPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ncPanelLayout.createSequentialGroup()
                                .addComponent(labelPort, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFiledPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelState)
                            .addComponent(textAreaInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(ncPanelLayout.createSequentialGroup()
                        .addComponent(jButtonStartServer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonStopServer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxProtocol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );
        ncPanelLayout.setVerticalGroup(
            ncPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ncPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ncPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPort, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFiledPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ncPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonStartServer)
                    .addComponent(jButtonStopServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxProtocol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabelState)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(textAreaInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gamePanel.setPreferredSize(new java.awt.Dimension(150, 150));

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ncPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187)
                .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ncPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonStartServerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonStartServerMouseClicked
        // TODO add your handling code here:
        try {
            int port = Integer.parseInt(jTextFiledPort.getText());
            ncAppServer.start(port);
        }
        catch (NumberFormatException ex) {
            MessageBox.showError(ex.getMessage(), "Порт не верный");
        }
    }//GEN-LAST:event_jButtonStartServerMouseClicked

    private void jButtonStopServerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonStopServerMouseClicked
        // TODO add your handling code here:
        ncAppServer.stop();
    }//GEN-LAST:event_jButtonStopServerMouseClicked

    private void jComboBoxProtocolItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxProtocolItemStateChanged
        // TODO add your handling code here:
        ncAppServer.setProtocol((String)evt.getItem());
    }//GEN-LAST:event_jComboBoxProtocolItemStateChanged

    private NC_AppServer ncAppServer;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel gamePanel;
    private javax.swing.JButton jButtonStartServer;
    private javax.swing.JButton jButtonStopServer;
    private javax.swing.JComboBox<String> jComboBoxProtocol;
    private javax.swing.JLabel jLabelState;
    private javax.swing.JTextField jTextFiledPort;
    private javax.swing.JLabel labelPort;
    private javax.swing.JPanel ncPanel;
    private java.awt.TextArea textAreaInfo;
    // End of variables declaration//GEN-END:variables
}
